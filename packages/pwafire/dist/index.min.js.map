{
  "version": 3,
  "sources": ["../src/index.ts", "../src/check/index.ts", "../src/pwa/badging/index.ts", "../src/pwa/barcode/index.ts", "../src/pwa/clipboard/index.ts", "../src/pwa/connectivity/index.ts", "../src/pwa/contacts/index.ts", "../src/pwa/content-indexing/index.ts", "../src/pwa/files/index.ts", "../src/pwa/fonts/index.ts", "../src/pwa/fullscreen/index.ts", "../src/pwa/idle-detection/index.ts", "../src/pwa/install/index.ts", "../src/pwa/notification/index.ts", "../src/pwa/payment/index.ts", "../src/pwa/screen/index.ts", "../src/pwa/visibility/index.ts", "../src/pwa/wake-lock/index.ts", "../src/pwa/web-otp/index.ts", "../src/pwa/web-share/index.ts", "../src/pwa/compression/index.ts"],
  "sourcesContent": ["/* Author :  Maye Edwin (Google Developer Expert)\n  Copyright : https://pwafire.org \n  */\nimport Check from \"./check\";\nimport {\n  BadgingApi,\n  BarcodeDetectorApi,\n  ClipboardApi,\n  ConnectivityApi,\n  ContactsApi,\n  ContentIndexingApi,\n  FilesApi,\n  FontsApi,\n  FullscreenApi,\n  IdleDetectionApi,\n  InstallApi,\n  NotificationApi,\n  PaymentApi,\n  ShareApi,\n  VisibilityApi,\n  WakeLockApi,\n  WebOTPApi,\n  screenApi,\n  compressionStreamsApi,\n} from \"./pwa\";\n\nconst pwafire = {\n  pwa: {\n    ...BadgingApi,\n    ...BarcodeDetectorApi,\n    ...ClipboardApi,\n    ...ConnectivityApi,\n    ...ContactsApi,\n    ...ContentIndexingApi,\n    ...FilesApi,\n    ...FontsApi,\n    ...FullscreenApi,\n    ...IdleDetectionApi,\n    ...InstallApi,\n    ...NotificationApi,\n    ...WebOTPApi,\n    ...PaymentApi,\n    ...ShareApi,\n    ...VisibilityApi,\n    ...WakeLockApi,\n    ...screenApi,\n    ...compressionStreamsApi,\n  },\n  check: new Check(),\n};\n\nconst { pwa, check } = pwafire;\nexport { check, pwa };\n\nexport default pwafire;\n", "class Check {\n  Share() {\n    return \"share\" in navigator;\n  }\n\n  shareFiles() {\n    return \"canShare\" in navigator;\n  }\n\n  Clipboard() {\n    return \"clipboard\" in navigator;\n  }\n\n  copyText() {\n    return this.Clipboard();\n  }\n\n  copyImage() {\n    return this.Clipboard();\n  }\n\n  idleDetection() {\n    return \"IdleDetector\" in window;\n  }\n\n  wakeLock() {\n    return \"wakeLock\" in navigator;\n  }\n\n  Contacts() {\n    return \"contacts\" in navigator && \"ContactsManager\" in window;\n  }\n\n  onlineStatus() {\n    return \"onLine\" in navigator;\n  }\n\n  Badging() {\n    return \"setAppBadge\" in navigator && \"clearAppBadge\" in navigator;\n  }\n\n  Notifications() {\n    return \"Notification\" in window;\n  }\n\n  contentIndexing() {\n    const registration = navigator.serviceWorker.ready;\n    return registration && \"index\" in registration;\n  }\n\n  notificationPermission() {\n    if (this.Notifications()) {\n      return Notification.permission === \"granted\";\n    } else {\n      return false;\n    }\n  }\n\n  barcodeDetector() {\n    return \"BarcodeDetector\" in window;\n  }\n\n  accessFonts() {\n    return \"queryLocalFonts\" in window;\n  }\n\n  serviceWorker() {\n    return \"serviceWorker\" in navigator;\n  }\n\n  Bluetooth() {\n    return \"bluetooth\" in navigator;\n  }\n\n  Payment() {\n    return \"PaymentRequest\" in window;\n  }\n\n  webOTP() {\n    return \"OTPCredential\" in window;\n  }\n\n  webNFC() {\n    return \"NDEFReader\" in window;\n  }\n\n  All() {\n    return [\n      this.createSupportObject(\"Share\", this.Share()),\n      this.createSupportObject(\"File Share\", this.shareFiles()),\n      this.createSupportObject(\"Clipboard\", this.Clipboard()),\n      this.createSupportObject(\"Copy Text\", this.copyText()),\n      this.createSupportObject(\"Copy Image\", this.copyImage()),\n      this.createSupportObject(\"Idle Detection\", this.idleDetection()),\n      this.createSupportObject(\"Wakelock\", this.wakeLock()),\n      this.createSupportObject(\"Contacts Picker\", this.Contacts()),\n      this.createSupportObject(\"Badging\", this.Badging()),\n      this.createSupportObject(\"Notifications\", this.Notifications()),\n      this.createSupportObject(\"Content Indexing\", this.contentIndexing()),\n      this.createSupportObject(\"Online Status\", this.onlineStatus()),\n      this.createSupportObject(\"Notification Permission\", this.notificationPermission()),\n      this.createSupportObject(\"Barcode Detector\", this.barcodeDetector()),\n      this.createSupportObject(\"Font Access\", this.accessFonts()),\n      this.createSupportObject(\"Service Worker\", this.serviceWorker()),\n      this.createSupportObject(\"Bluetooth\", this.Bluetooth()),\n      this.createSupportObject(\"Payment\", this.Payment()),\n      this.createSupportObject(\"Web OTP\", this.webOTP()),\n      this.createSupportObject(\"Web NFC\", this.webNFC()),\n    ].sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  createSupportObject(name: string, isSupported: boolean) {\n    return {\n      name,\n      message: isSupported ? \"Supported\" : \"Not supported\",\n      ok: isSupported,\n    };\n  }\n}\n\nexport default Check;\n", "export const BadgingApi = {\n  setBadge: async (unreadCount: number) => {\n    try {\n      if (navigator.setAppBadge) {\n        await navigator.setAppBadge(unreadCount);\n        return { ok: true, message: \"Set\" };\n      } else {\n        return {\n          ok: false,\n          message: \"Badging API not supported\",\n        };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  clearBadge: async () => {\n    try {\n      if (navigator.clearAppBadge) {\n        await navigator.clearAppBadge();\n        return { ok: true, message: \"Cleared\" };\n      } else {\n        return { ok: false, message: \"Badging API not supported\" };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const BarcodeDetectorApi = {\n  barcodeDetector: async (options: {\n    image: Blob | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | ImageBitmap;\n    format:\n      | \"aztec\"\n      | \"code_128\"\n      | \"code_39\"\n      | \"code_93\"\n      | \"codabar\"\n      | \"data_matrix\"\n      | \"ean_13\"\n      | \"ean_8\"\n      | \"itf\"\n      | \"pdf417\"\n      | \"qr_code\"\n      | \"upc_a\"\n      | \"upc_e\";\n  }) => {\n    try {\n      if (\"BarcodeDetector\" in window) {\n        const formatSupported = (await BarcodeDetector.getSupportedFormats()).includes(options.format);\n        if (formatSupported) {\n          const barcodeDetector = new BarcodeDetector({\n            formats: [options.format],\n          });\n          const barcodes = await barcodeDetector.detect(options.image);\n          return {\n            ok: barcodes ? true : false,\n            message: barcodes ? \"Barcode detected\" : \"No barcode detected\",\n            barcodes,\n          };\n        } else {\n          return {\n            ok: false,\n            message: `Sorry, \"${\n              options.format.charAt(0).toUpperCase() + options.format.slice(1)\n            }\" format not supported`,\n          };\n        }\n      } else {\n        return {\n          ok: false,\n          message: \"Barcode Detector API not supported\",\n        };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const ClipboardApi = {\n  copyText: async (text: string): Promise<{ ok: boolean; message: string }> => {\n    try {\n      if (navigator.clipboard) {\n        await navigator.clipboard.writeText(text);\n        return { ok: true, message: \"Copied\" };\n      } else {\n        return {\n          ok: false,\n          message: \"Copy Text API not supported\",\n        };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  readText: async (): Promise<{ ok: boolean; message: string; text: string | null }> => {\n    try {\n      if (navigator.clipboard) {\n        const text = await navigator.clipboard.readText();\n        return { ok: true, message: \"Read\", text };\n      } else {\n        return { ok: false, message: \"Read Text API not supported\", text: null };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  copyImage: async (imgURL: string) => {\n    try {\n      if (navigator.clipboard) {\n        const data = await fetch(imgURL);\n        const blob = await data.blob();\n        await navigator.clipboard.write([\n          new ClipboardItem({\n            [blob.type]: blob,\n          }),\n        ]);\n        return {\n          ok: true,\n          message: \"Image copied\",\n        };\n      } else {\n        return { ok: false, message: \"Copy Image API not supported\" };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const ConnectivityApi = {\n  Connectivity: async (online: () => \"online\", offline: () => \"offline\") => {\n    try {\n      if (navigator.onLine) {\n        online();\n        return { ok: true, message: \"Online\" };\n      } else {\n        offline();\n        return { ok: true, message: \"Offline\" };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const ContactsApi = {\n  Contacts: async (\n    props: string[],\n    options?: {\n      multiple: boolean;\n    },\n  ) => {\n    try {\n      if (\"contacts\" in navigator && \"ContactsManager\" in window) {\n        const contacts = await (\n          navigator.contacts as {\n            select: (props: string[], options?: { multiple: boolean }) => Promise<any>;\n          }\n        ).select(props, options);\n        return { ok: true, message: \"Selected\", contacts };\n      } else {\n        return { ok: false, message: \"Contacts Picker API not supported\" };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const ContentIndexingApi = {\n  contentIndexing: async () => {\n    try {\n      const registration = (await navigator.serviceWorker.ready) as any;\n      if (\"index\" in registration) {\n        return {\n          ok: true,\n          message: \"Context Indexing ready\",\n          getAll: async () => {\n            try {\n              return (await registration.index.getAll()) as {\n                [key: string]: string | number | boolean | object | any;\n              }[];\n            } catch (error) {\n              throw error;\n            }\n          },\n          addItem: async (item: {\n            id: string;\n            title: string;\n            category?: \"homepage\" | \"article\" | \"video\" | \"audio\" | \"\";\n            description: string;\n            icons: {\n              src: string;\n              sizes: string;\n              type: string;\n            }[];\n            url: string;\n          }) => {\n            try {\n              await registration.index.add({\n                ...item,\n                category: item.category || \"\",\n              });\n              return { ok: true, message: \"Added\" };\n            } catch (error) {\n              throw error;\n            }\n          },\n          removeItem: async (id: string) => {\n            try {\n              await registration.index.delete(id);\n              return { ok: true, message: \"Removed\" };\n            } catch (error) {\n              throw error;\n            }\n          },\n        };\n      } else {\n        return {\n          ok: false,\n          message: \"Content Indexing API not supported\",\n        };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const FilesApi = {\n  readFiles: async (): Promise<{ ok: boolean; message: string; files: File[] | null }> => {\n    try {\n      if (navigator.clipboard) {\n        const files = [] as File[];\n        const items = await navigator.clipboard.read();\n        for (const item of items) {\n          for (const type of item.types) {\n            const blob = await item.getType(type);\n            const file = new File([blob], \"clipboard-file\", { type });\n            files.push(file);\n          }\n        }\n        return { ok: true, message: \"Read\", files };\n      } else {\n        return { ok: false, message: \"Read Files API not supported\", files: null };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n  pickTextFile: async () => {\n    try {\n      let fileHandle;\n      [fileHandle] = await window.showOpenFilePicker();\n      const file = await fileHandle.getFile();\n      if (file) {\n        const typeList = file.type.split(\"/\");\n        if (typeList.includes(\"text\")) {\n          const contents = await file.text();\n          return { ok: true, message: \"File picked\", contents };\n        } else {\n          return { ok: false, message: \"File Picker API not supported\" };\n        }\n      } else {\n        return { ok: false, message: \"Please pick text type file\" };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n  pickFile: async (options?: {\n    types: [\n      {\n        description: string;\n        accept: {\n          \"image/*\"?: string[];\n          \"audio/*\"?: string[];\n          \"video/*\"?: string[];\n        };\n      },\n    ];\n    multiple?: boolean;\n  }) => {\n    try {\n      let fileHandle: any;\n      [fileHandle] = options ? await window.showOpenFilePicker(options) : await window.showOpenFilePicker();\n      const file: any = await fileHandle.getFile();\n      if (file) {\n        return {\n          file,\n          ok: true,\n          message: \"File picked\",\n        };\n      } else {\n        return {\n          file: null,\n          ok: false,\n          message: \"File Picker API not supported\",\n        };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const FontsApi = {\n  accessFonts: async (config?: { postscriptNames?: string[]; sfnt?: boolean }) => {\n    try {\n      const getSFNT = async (availableFonts: [any]) => {\n        try {\n          const outlineFormats = [];\n          for (const fontData of availableFonts) {\n            const sfntBlob = await fontData.blob();\n            const sfntVersion = await sfntBlob.slice(0, 4).text();\n            let outlineFormat = \"\";\n            switch (sfntVersion) {\n              case \"\\x00\\x01\\x00\\x00\":\n              case \"true\":\n              case \"typ1\":\n                outlineFormat = \"truetype\";\n                break;\n              case \"OTTO\":\n                outlineFormat = \"cff\";\n                break;\n            }\n            if (outlineFormat !== \"\") outlineFormats.push(outlineFormat);\n          }\n          return outlineFormats;\n        } catch (error) {\n          throw error;\n        }\n      };\n      if (\"queryLocalFonts\" in window) {\n        if (config && config.postscriptNames) {\n          const fonts = await window.queryLocalFonts({ postscriptNames: config.postscriptNames });\n          return {\n            ok: true,\n            message: \"Fonts access\",\n            fonts,\n            sfnt: config.sfnt ? await getSFNT(fonts) : [],\n          };\n        } else {\n          const fonts = await window.queryLocalFonts();\n          return {\n            ok: true,\n            message: \"Fonts access\",\n            fonts,\n            sfnt: config && config.sfnt ? await getSFNT(fonts) : [],\n          };\n        }\n      } else {\n        return {\n          ok: false,\n          message: \"Local Fonts Access API not supported\",\n          fonts: null,\n        };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const FullscreenApi = {\n  Fullscreen: async () => {\n    try {\n      if (document.fullscreenEnabled) {\n        await document.documentElement.requestFullscreen();\n        return { ok: true, message: \"Fullscreen\" };\n      } else {\n        return { ok: false, message: \"Fullscreen disabled\" };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const IdleDetectionApi = {\n  idleDetection: async (\n    action = \"start\",\n    callback = () => {\n      // do something\n    },\n    threshold = 60000,\n  ) => {\n    try {\n      if (\"IdleDetector\" in window) {\n        const state = await IdleDetector.requestPermission();\n        if (state === \"granted\") {\n          const controller = new AbortController();\n          const signal = controller.signal;\n          const idleDetector = new IdleDetector();\n          idleDetector.addEventListener(\"change\", () => {\n            const userState = idleDetector.userState;\n            if (userState === \"idle\") callback();\n          });\n          if (action === \"start\") {\n            await idleDetector.start({\n              threshold: threshold > 60000 ? threshold : 60000,\n              signal,\n            });\n            return { ok: true, message: \"Started\" };\n          } else {\n            controller.abort();\n            return { ok: true, message: \"Aborted\" };\n          }\n        } else {\n          return { ok: false, message: \"Need to request permission first\" };\n        }\n      } else {\n        return { ok: false, message: \"Idle Detection API not supported\" };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const InstallApi = {\n  Install: async (type: \"before\" | \"install\" | \"installed\" = \"installed\", callback: (event: string | any) => any) => {\n    try {\n      if (navigator.serviceWorker) {\n        const methods = {\n          checkIfAppInstalled: async () => {\n            try {\n              window.addEventListener(\"appinstalled\", () => {\n                callback(\"installed\");\n              });\n              return { ok: true, message: \"Check if installed\" };\n            } catch (error) {\n              throw error;\n            }\n          },\n          beforeInstallPromptEvent: async () => {\n            try {\n              window.addEventListener(\"beforeinstallprompt\", (event: any) => {\n                callback(event);\n              });\n              return { ok: true, message: \"Before install prompt\" };\n            } catch (error) {\n              throw error;\n            }\n          },\n          installApp: async () => {\n            try {\n              callback(\"install\");\n              return { ok: true, message: \"Install App\" };\n            } catch (error) {\n              throw error;\n            }\n          },\n        };\n\n        switch (type) {\n          case \"before\":\n            return await methods.beforeInstallPromptEvent();\n          case \"install\":\n            return await methods.installApp();\n          case \"installed\":\n            return await methods.checkIfAppInstalled();\n          default:\n            return { ok: false, message: \"Type can be 'install', 'installed' or 'before'\" };\n        }\n      } else {\n        return { ok: false, message: \"Service Worker not supported\" };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const NotificationApi = {\n  Notification: async (data: {\n    title: string;\n    options: {\n      body: string;\n      icon?: string;\n      badge?: string;\n      vibrate?: number[];\n      sound?: string;\n      timestamp: number;\n      data?: any;\n      dir?: \"auto\" | \"ltr\" | \"rtl\";\n      tag?: string;\n      requireInteraction?: boolean;\n      renotify?: boolean;\n      silent?: boolean;\n      actions?: {\n        action: string;\n        type: \"button\" | \"text\";\n        title: string;\n        icon?: string;\n        placeholder?: string;\n      }[];\n    };\n  }) => {\n    const { title, options } = data;\n    try {\n      if (\"Notification\" in window) {\n        const permission = await Notification.requestPermission();\n        if (permission === \"granted\") {\n          await navigator.serviceWorker.ready.then((registration) => {\n            registration.showNotification(title, options);\n            return { ok: true, message: \"Sent\" };\n          });\n        } else {\n          return { ok: true, message: \"Denied\" };\n        }\n      } else {\n        return { ok: false, message: \"Notification API not supported\" };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const PaymentApi = {\n  Payment: async (\n    paydata: {\n      paymentMethods: PaymentMethodData[];\n      paymentDetails: PaymentDetailsInit;\n      options: any;\n    },\n    validatePayment: (arg0: PaymentResponse) => void,\n  ) => {\n    try {\n      const paymentRequest = new PaymentRequest(paydata.paymentMethods, paydata.paymentDetails);\n      if (paymentRequest) {\n        const canPay = await paymentRequest.canMakePayment();\n        if (canPay) {\n          const paymentResponse = await paymentRequest.show();\n          validatePayment(paymentResponse);\n          return { ok: true, message: \"Payment\" };\n        } else {\n          return { ok: false, message: \"Payment method(s) not supported\" };\n        }\n      } else {\n        return { ok: false, message: \"Payment Request API not supported\" };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const screenApi = {\n  screenSharingControls: async (config: {\n    video: { displaySurface: \"browser\" | \"monitor\" | \"window\" } | boolean;\n    monitorTypeSurfaces?: \"exclude\" | \"include\";\n    surfaceSwitching?: \"include\" | \"exclude\";\n    selfBrowserSurface?: \"include\" | \"exclude\";\n    audio?: boolean;\n    systemAudio: \"exclude\" | \"include\";\n  }) => {\n    if (navigator.mediaDevices && \"getDisplayMedia\" in navigator.mediaDevices) {\n      return navigator.mediaDevices.getDisplayMedia(config as any);\n    } else {\n      throw new Error(\"Screen sharing is not supported in this browser.\");\n    }\n  },\n  webPIP: async (\n    callback: (data: { ok: boolean; message: string; window: any }) => void,\n    config: {\n      height?: number;\n      width?: number;\n      disallowReturnToOpener?: boolean;\n    } = {},\n  ) => {\n    try {\n      const pipButton = document.getElementById(\"pipButton\") as HTMLElement;\n      const player = document.getElementById(\"pipPlayer\") as HTMLElement;\n      if (!pipButton || !player) throw new Error(\"No player or button found.\");\n      pipButton.addEventListener(\"click\", async () => {\n        if (\"documentPictureInPicture\" in window) {\n          const pipWindow = await window.documentPictureInPicture.requestWindow({\n            ...config,\n            width: config?.width ?? player?.clientWidth,\n            height: config?.height ?? player?.clientHeight,\n          });\n          pipWindow.document.body.append(player);\n          callback({ ok: true, window: pipWindow, message: \"Picture in Picture mode enabled.\" });\n        } else {\n          callback({ ok: false, window: null, message: \"Picture in Picture is not supported in this browser.\" });\n        }\n      });\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const VisibilityApi = {\n  Visibility: async (isVisible: () => void, notAvailable: () => void) => {\n    try {\n      if (document.visibilityState) {\n        const state = document.visibilityState;\n        if (state === \"visible\") {\n          isVisible();\n          return { ok: true, message: \"Visible\" };\n        }\n      } else {\n        notAvailable();\n        return {\n          ok: false,\n          message: \"Visibility API not supported\",\n        };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n  displayMode: async (callback: (mode: \"standalone\" | \"minimal-ui\" | \"fullscreen\" | \"broswer-tab\") => void) => {\n    try {\n      window.addEventListener(\"DOMContentLoaded\", () => {\n        const displayMode = window.matchMedia(\"(display-mode: standalone)\").matches\n          ? \"standalone\"\n          : window.matchMedia(\"(display-mode: minimal-ui)\").matches\n          ? \"minimal-ui\"\n          : window.matchMedia(\"(display-mode: fullscreen)\").matches\n          ? \"fullscreen\"\n          : \"broswer-tab\";\n        callback(displayMode);\n      });\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const WakeLockApi = {\n  wakeLock: async () => {\n    try {\n      if (\"wakeLock\" in navigator) {\n        const wakeLock = await navigator?.wakeLock?.request(\"screen\");\n        if (wakeLock) {\n          return { ok: true, message: \"WakeLock Active\" };\n        } else {\n          return { ok: false, message: \"WakeLock Failed\" };\n        }\n      } else {\n        return { ok: false, message: \"WakeLock API not supported\" };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const WebOTPApi = {\n  webOTP: async (callback: (res: { code: string | null; ok: boolean; message: string }) => void) => {\n    try {\n      if (\"OTPCredential\" in window) {\n        window.addEventListener(\"DOMContentLoaded\", async () => {\n          const input = document.querySelector('input[autocomplete=\"one-time-code\"]');\n          if (input) {\n            const ac = new AbortController();\n            const form = input.closest(\"form\");\n            if (form) {\n              form.addEventListener(\"submit\", () => {\n                ac.abort();\n              });\n            }\n            const otp = (await navigator.credentials.get({\n              otp: { transport: [\"sms\"] },\n              signal: ac.signal,\n            } as OTPCredentialOptions)) as OTPCredential;\n            callback({\n              code: otp.code,\n              ok: true,\n              message: \"OTP received\",\n            });\n          } else {\n            callback({\n              code: null,\n              ok: false,\n              message: \"No input with autocomplete='one-time-code' found\",\n            });\n          }\n        });\n      } else {\n        callback({\n          code: null,\n          ok: false,\n          message: \"Web OTP API not supported\",\n        });\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const ShareApi = {\n  Share: async (data: ShareData) => {\n    try {\n      if (data.files) {\n        if (navigator.canShare && navigator.canShare(data)) {\n          await navigator.share(data);\n          return { ok: true, message: \"Shared\" };\n        } else {\n          return { ok: false, message: \"Share Files API not supported\" };\n        }\n      } else {\n        if (navigator.share) {\n          await navigator.share(data);\n          return { ok: true, message: \"Shared\" };\n        } else {\n          return { ok: false, message: \"Web Share API not supported\" };\n        }\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n", "export const compressionStreamsApi = {\n  compressStream: async (readableStream: ReadableStream) => {\n    try {\n      if (\"CompressionStream\" in window) {\n        return {\n          ok: true,\n          message: \"Compressed\",\n          stream: readableStream.pipeThrough(new CompressionStream(\"gzip\")),\n        };\n      } else {\n        return {\n          ok: false,\n          message: \"Compression Streams API not supported\",\n        };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n  decompressStream: async (compressedReadableStream: ReadableStream) => {\n    try {\n      if (\"DecompressionStream\" in window) {\n        return {\n          ok: true,\n          message: \"Decompressed\",\n          stream: compressedReadableStream.pipeThrough(new DecompressionStream(\"gzip\")),\n        };\n      } else {\n        return {\n          ok: false,\n          message: \"DeCompression Streams API not supported\",\n        };\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n"],
  "mappings": "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",
  "names": ["src_exports", "__export", "check", "src_default", "pwa", "Check", "registration", "a", "b", "name", "isSupported", "check_default", "BadgingApi", "unreadCount", "error", "BarcodeDetectorApi", "options", "barcodes", "error", "ClipboardApi", "text", "error", "imgURL", "blob", "ConnectivityApi", "online", "offline", "error", "ContactsApi", "props", "options", "error", "ContentIndexingApi", "registration", "error", "item", "id", "FilesApi", "files", "items", "item", "type", "blob", "file", "error", "fileHandle", "options", "FontsApi", "config", "getSFNT", "availableFonts", "outlineFormats", "fontData", "sfntVersion", "outlineFormat", "error", "fonts", "FullscreenApi", "error", "IdleDetectionApi", "action", "callback", "threshold", "controller", "signal", "idleDetector", "error", "InstallApi", "type", "callback", "methods", "error", "event", "NotificationApi", "data", "title", "options", "registration", "error", "PaymentApi", "paydata", "validatePayment", "paymentRequest", "paymentResponse", "error", "screenApi", "config", "callback", "pipButton", "player", "pipWindow", "error", "VisibilityApi", "isVisible", "notAvailable", "error", "callback", "displayMode", "WakeLockApi", "error", "WebOTPApi", "callback", "input", "ac", "form", "otp", "error", "ShareApi", "data", "error", "compressionStreamsApi", "readableStream", "error", "compressedReadableStream", "pwafire", "BadgingApi", "BarcodeDetectorApi", "ClipboardApi", "ConnectivityApi", "ContactsApi", "ContentIndexingApi", "FilesApi", "FontsApi", "FullscreenApi", "IdleDetectionApi", "InstallApi", "NotificationApi", "WebOTPApi", "PaymentApi", "ShareApi", "VisibilityApi", "WakeLockApi", "screenApi", "compressionStreamsApi", "check_default", "pwa", "check", "src_default", "pwafire"]
}
