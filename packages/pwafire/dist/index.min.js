"use strict";var YourLibrary=(()=>{var c=Object.defineProperty;var B=Object.getOwnPropertyDescriptor;var L=Object.getOwnPropertyNames;var T=Object.prototype.hasOwnProperty;var N=(e,t)=>{for(var r in t)c(e,r,{get:t[r],enumerable:!0})},W=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of L(t))!T.call(e,a)&&a!==r&&c(e,a,{get:()=>t[a],enumerable:!(o=B(t,a))||o.enumerable});return e};var j=e=>W(c({},"__esModule",{value:!0}),e);var R={};N(R,{check:()=>M,default:()=>q,pwa:()=>E});var l=class{Share(){return"share"in navigator}shareFiles(){return"canShare"in navigator}Clipboard(){return"clipboard"in navigator}copyText(){return this.Clipboard()}copyImage(){return this.Clipboard()}idleDetection(){return"IdleDetector"in window}wakeLock(){return"wakeLock"in navigator}Contacts(){return"contacts"in navigator&&"ContactsManager"in window}onlineStatus(){return"onLine"in navigator}Badging(){return"setAppBadge"in navigator&&"clearAppBadge"in navigator}Notifications(){return"Notification"in window}contentIndexing(){let t=navigator.serviceWorker.ready;return t&&"index"in t}notificationPermission(){return this.Notifications()?Notification.permission==="granted":!1}barcodeDetector(){return"BarcodeDetector"in window}accessFonts(){return"queryLocalFonts"in window}serviceWorker(){return"serviceWorker"in navigator}Bluetooth(){return"bluetooth"in navigator}Payment(){return"PaymentRequest"in window}webOTP(){return"OTPCredential"in window}webNFC(){return"NDEFReader"in window}All(){return[this.createSupportObject("Share",this.Share()),this.createSupportObject("File Share",this.shareFiles()),this.createSupportObject("Clipboard",this.Clipboard()),this.createSupportObject("Copy Text",this.copyText()),this.createSupportObject("Copy Image",this.copyImage()),this.createSupportObject("Idle Detection",this.idleDetection()),this.createSupportObject("Wakelock",this.wakeLock()),this.createSupportObject("Contacts Picker",this.Contacts()),this.createSupportObject("Badging",this.Badging()),this.createSupportObject("Notifications",this.Notifications()),this.createSupportObject("Content Indexing",this.contentIndexing()),this.createSupportObject("Online Status",this.onlineStatus()),this.createSupportObject("Notification Permission",this.notificationPermission()),this.createSupportObject("Barcode Detector",this.barcodeDetector()),this.createSupportObject("Font Access",this.accessFonts()),this.createSupportObject("Service Worker",this.serviceWorker()),this.createSupportObject("Bluetooth",this.Bluetooth()),this.createSupportObject("Payment",this.Payment()),this.createSupportObject("Web OTP",this.webOTP()),this.createSupportObject("Web NFC",this.webNFC())].sort((t,r)=>t.name.localeCompare(r.name))}createSupportObject(t,r){return{name:t,message:r?"Supported":"Not supported",ok:r}}},D=l;var p={setBadge:async e=>{try{return navigator.setAppBadge?(await navigator.setAppBadge(e),{ok:!0,message:"Set"}):{ok:!1,message:"Badging API not supported"}}catch(t){throw t}},clearBadge:async()=>{try{return navigator.clearAppBadge?(await navigator.clearAppBadge(),{ok:!0,message:"Cleared"}):{ok:!1,message:"Badging API not supported"}}catch(e){throw e}}};var d={barcodeDetector:async e=>{try{if("BarcodeDetector"in window)if((await BarcodeDetector.getSupportedFormats()).includes(e.format)){let o=await new BarcodeDetector({formats:[e.format]}).detect(e.image);return{ok:!!o,message:o?"Barcode detected":"No barcode detected",barcodes:o}}else return{ok:!1,message:`Sorry, "${e.format.charAt(0).toUpperCase()+e.format.slice(1)}" format not supported`};else return{ok:!1,message:"Barcode Detector API not supported"}}catch(t){throw t}}};var u={copyText:async e=>{try{return navigator.clipboard?(await navigator.clipboard.writeText(e),{ok:!0,message:"Copied"}):{ok:!1,message:"Copy Text API not supported"}}catch(t){throw t}},readText:async()=>{try{return navigator.clipboard?{ok:!0,message:"Read",text:await navigator.clipboard.readText()}:{ok:!1,message:"Read Text API not supported",text:null}}catch(e){throw e}},copyImage:async e=>{try{if(navigator.clipboard){let r=await(await fetch(e)).blob();return await navigator.clipboard.write([new ClipboardItem({[r.type]:r})]),{ok:!0,message:"Image copied"}}else return{ok:!1,message:"Copy Image API not supported"}}catch(t){throw t}}};var m={Connectivity:async(e,t)=>{try{return navigator.onLine?(e(),{ok:!0,message:"Online"}):(t(),{ok:!0,message:"Offline"})}catch(r){throw r}}};var g={Contacts:async(e,t)=>{try{return"contacts"in navigator&&"ContactsManager"in window?{ok:!0,message:"Selected",contacts:await navigator.contacts.select(e,t)}:{ok:!1,message:"Contacts Picker API not supported"}}catch(r){throw r}}};var w={contentIndexing:async()=>{try{let e=await navigator.serviceWorker.ready;return"index"in e?{ok:!0,message:"Context Indexing ready",getAll:async()=>{try{return await e.index.getAll()}catch(t){throw t}},addItem:async t=>{try{return await e.index.add({...t,category:t.category||""}),{ok:!0,message:"Added"}}catch(r){throw r}},removeItem:async t=>{try{return await e.index.delete(t),{ok:!0,message:"Removed"}}catch(r){throw r}}}:{ok:!1,message:"Content Indexing API not supported"}}catch(e){throw e}}};var h={readFiles:async()=>{try{if(navigator.clipboard){let e=[],t=await navigator.clipboard.read();for(let r of t)for(let o of r.types){let a=await r.getType(o),i=new File([a],"clipboard-file",{type:o});e.push(i)}return{ok:!0,message:"Read",files:e}}else return{ok:!1,message:"Read Files API not supported",files:null}}catch(e){throw e}},pickTextFile:async()=>{try{let e;[e]=await window.showOpenFilePicker();let t=await e.getFile();return t?t.type.split("/").includes("text")?{ok:!0,message:"File picked",contents:await t.text()}:{ok:!1,message:"File Picker API not supported"}:{ok:!1,message:"Please pick text type file"}}catch(e){throw e}},pickFile:async e=>{try{let t;[t]=e?await window.showOpenFilePicker(e):await window.showOpenFilePicker();let r=await t.getFile();return r?{file:r,ok:!0,message:"File picked"}:{file:null,ok:!1,message:"File Picker API not supported"}}catch(t){throw t}}};var f={accessFonts:async e=>{try{let t=async r=>{try{let o=[];for(let a of r){let n=await(await a.blob()).slice(0,4).text(),s="";switch(n){case"\0\0\0":case"true":case"typ1":s="truetype";break;case"OTTO":s="cff";break}s!==""&&o.push(s)}return o}catch(o){throw o}};if("queryLocalFonts"in window)if(e&&e.postscriptNames){let r=await window.queryLocalFonts({postscriptNames:e.postscriptNames});return{ok:!0,message:"Fonts access",fonts:r,sfnt:e.sfnt?await t(r):[]}}else{let r=await window.queryLocalFonts();return{ok:!0,message:"Fonts access",fonts:r,sfnt:e&&e.sfnt?await t(r):[]}}else return{ok:!1,message:"Local Fonts Access API not supported",fonts:null}}catch(t){throw t}}};var y={Fullscreen:async()=>{try{return document.fullscreenEnabled?(await document.documentElement.requestFullscreen(),{ok:!0,message:"Fullscreen"}):{ok:!1,message:"Fullscreen disabled"}}catch(e){throw e}}};var b={idleDetection:async(e="start",t=()=>{},r=6e4)=>{try{if("IdleDetector"in window)if(await IdleDetector.requestPermission()==="granted"){let a=new AbortController,i=a.signal,n=new IdleDetector;return n.addEventListener("change",()=>{n.userState==="idle"&&t()}),e==="start"?(await n.start({threshold:r>6e4?r:6e4,signal:i}),{ok:!0,message:"Started"}):(a.abort(),{ok:!0,message:"Aborted"})}else return{ok:!1,message:"Need to request permission first"};else return{ok:!1,message:"Idle Detection API not supported"}}catch(o){throw o}}};var k={Install:async(e="installed",t)=>{try{if(navigator.serviceWorker){let r={checkIfAppInstalled:async()=>{try{return window.addEventListener("appinstalled",()=>{t("installed")}),{ok:!0,message:"Check if installed"}}catch(o){throw o}},beforeInstallPromptEvent:async()=>{try{return window.addEventListener("beforeinstallprompt",o=>{t(o)}),{ok:!0,message:"Before install prompt"}}catch(o){throw o}},installApp:async()=>{try{return t("install"),{ok:!0,message:"Install App"}}catch(o){throw o}}};switch(e){case"before":return await r.beforeInstallPromptEvent();case"install":return await r.installApp();case"installed":return await r.checkIfAppInstalled();default:return{ok:!1,message:"Type can be 'install', 'installed' or 'before'"}}}else return{ok:!1,message:"Service Worker not supported"}}catch(r){throw r}}};var A={Notification:async e=>{let{title:t,options:r}=e;try{if("Notification"in window)if(await Notification.requestPermission()==="granted")await navigator.serviceWorker.ready.then(a=>(a.showNotification(t,r),{ok:!0,message:"Sent"}));else return{ok:!0,message:"Denied"};else return{ok:!1,message:"Notification API not supported"}}catch(o){throw o}}};var v={Payment:async(e,t)=>{try{let r=new PaymentRequest(e.paymentMethods,e.paymentDetails);if(r)if(await r.canMakePayment()){let a=await r.show();return t(a),{ok:!0,message:"Payment"}}else return{ok:!1,message:"Payment method(s) not supported"};else return{ok:!1,message:"Payment Request API not supported"}}catch(r){throw r}}};var x={screenSharingControls:async e=>{if(navigator.mediaDevices&&"getDisplayMedia"in navigator.mediaDevices)return navigator.mediaDevices.getDisplayMedia(e);throw new Error("Screen sharing is not supported in this browser.")},webPIP:async(e,t={})=>{try{let r=document.getElementById("pipButton"),o=document.getElementById("pipPlayer");if(!r||!o)throw new Error("No player or button found.");r.addEventListener("click",async()=>{if("documentPictureInPicture"in window){let a=await window.documentPictureInPicture.requestWindow({...t,width:t?.width??o?.clientWidth,height:t?.height??o?.clientHeight});a.document.body.append(o),e({ok:!0,window:a,message:"Picture in Picture mode enabled."})}else e({ok:!1,window:null,message:"Picture in Picture is not supported in this browser."})})}catch(r){throw r}}};var P={Visibility:async(e,t)=>{try{if(document.visibilityState){if(document.visibilityState==="visible")return e(),{ok:!0,message:"Visible"}}else return t(),{ok:!1,message:"Visibility API not supported"}}catch(r){throw r}},displayMode:async e=>{try{window.addEventListener("DOMContentLoaded",()=>{let t=window.matchMedia("(display-mode: standalone)").matches?"standalone":window.matchMedia("(display-mode: minimal-ui)").matches?"minimal-ui":window.matchMedia("(display-mode: fullscreen)").matches?"fullscreen":"broswer-tab";e(t)})}catch(t){throw t}}};var S={wakeLock:async()=>{try{return"wakeLock"in navigator?await navigator?.wakeLock?.request("screen")?{ok:!0,message:"WakeLock Active"}:{ok:!1,message:"WakeLock Failed"}:{ok:!1,message:"WakeLock API not supported"}}catch(e){throw e}}};var I={webOTP:async e=>{try{"OTPCredential"in window?window.addEventListener("DOMContentLoaded",async()=>{let t=document.querySelector('input[autocomplete="one-time-code"]');if(t){let r=new AbortController,o=t.closest("form");o&&o.addEventListener("submit",()=>{r.abort()});let a=await navigator.credentials.get({otp:{transport:["sms"]},signal:r.signal});e({code:a.code,ok:!0,message:"OTP received"})}else e({code:null,ok:!1,message:"No input with autocomplete='one-time-code' found"})}):e({code:null,ok:!1,message:"Web OTP API not supported"})}catch(t){throw t}}};var C={Share:async e=>{try{return e.files?navigator.canShare&&navigator.canShare(e)?(await navigator.share(e),{ok:!0,message:"Shared"}):{ok:!1,message:"Share Files API not supported"}:navigator.share?(await navigator.share(e),{ok:!0,message:"Shared"}):{ok:!1,message:"Web Share API not supported"}}catch(t){throw t}}};var F={compressStream:async e=>{try{return"CompressionStream"in window?{ok:!0,message:"Compressed",stream:e.pipeThrough(new CompressionStream("gzip"))}:{ok:!1,message:"Compression Streams API not supported"}}catch(t){throw t}},decompressStream:async e=>{try{return"DecompressionStream"in window?{ok:!0,message:"Decompressed",stream:e.pipeThrough(new DecompressionStream("gzip"))}:{ok:!1,message:"DeCompression Streams API not supported"}}catch(t){throw t}}};var O={pwa:{...p,...d,...u,...m,...g,...w,...h,...f,...y,...b,...k,...A,...I,...v,...C,...P,...S,...x,...F},check:new D},{pwa:E,check:M}=O;var q=O;return j(R);})();
//# sourceMappingURL=index.min.js.map
